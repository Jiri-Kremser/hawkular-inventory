{
  "0.5.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.class.visibilityReduced",
          "regex": true,
          "old": "class org\\.hawkular\\.inventory\\.api\\.model\\.Path\\..*",
          "justification": "A number of inner classes of the Path class have been 'hidden'. These classes were not meant for public consumption and so this change should not cause much trouble to the users."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.api.model.Path.Decoder::<init>(org.hawkular.inventory.api.model.Path.EnhancedTypeProvider)",
          "justification": "This is never used in a public capacity and also doesn't have a reason to be used publicly."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method org.hawkular.inventory.api.model.Path.Segment org.hawkular.inventory.api.model.Path.Decoder::decodeNext(org.hawkular.inventory.api.model.Path.ParsingProgress)",
          "justification": "This is never used in a public capacity and also doesn't have a reason to be used publicly."
        },
        {
          "code": "java.class.nowFinal",
          "old": "class org.hawkular.inventory.api.model.Path.Decoder",
          "justification": "This class should not be subclassable. It's also been changed to private so clients will not even see this class anymore."
        },
        {
          "code": "java.class.nowFinal",
          "old": "class org.hawkular.inventory.api.model.Path.Encoder",
          "justification": "This class should not be subclassable to ensure uniform encoding of canonical and relative paths."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method org.hawkular.inventory.api.model.Path org.hawkular.inventory.api.model.Path::fromString(java.lang.String, boolean, org.hawkular.inventory.api.model.Path.ExtenderConstructor, org.hawkular.inventory.api.model.Path.EnhancedTypeProvider)",
          "justification": "This was reduced to package visibility, because all Path subclasses should always be present in the same package in the API."
        },
        {
          "code": "java.class.removed",
          "old": "class org.hawkular.inventory.api.model.Version",
          "justification": "This class hasn't been in use for a couple of releases."
        },
        {
          "code": "java.class.visibilityReduced",
          "old": "class org.hawkular.inventory.base.BaseInventory.Initialized<E>",
          "justification": "This is used internally and should not have leaked into the API."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.base.BaseInventory.Initialized<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext, org.hawkular.inventory.api.Configuration)",
          "justification": "This is used internally and should have not leaked into the API."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext)",
          "justification": "This is used internally and should have not leaked into the API."
        },
        {
          "code": "java.class.externalClassNoLongerExposedInAPI",
          "old": "class org.hawkular.inventory.base.ObservableContext",
          "justification": "This is actually a good thing (tm) :)"
        },
        {
          "code" : "java.method.addedToInterface",
          "new" : "method org.hawkular.inventory.api.Configuration org.hawkular.inventory.api.Inventory::getConfiguration()",
          "justification" : "Exposing the configuration."
        },
        {
          "code" : "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext)",
          "new": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext, org.hawkular.inventory.api.Configuration)",
          "justification" : "Passing the configuration as a parameter in constructor."
        }
      ]
    }
  },
  "0.7.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.generics.formalTypeParameterChanged",
          "new": "class org.hawkular.inventory.api.model.Entity<B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\.Entity<[^>]+>::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\.(DataEntity|Environment|Feed|Metric|MetricType|OperationType|Resource|ResourceType|Tenant)::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter void org\\.hawkular\\.inventory\\.api\\.model\\.(DataEntity|Environment|Feed|Metric|MetricType|OperationType|Resource|ResourceType|Tenant)::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Update::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter void org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Update::<init>\\(.*",
          "justification": "Support for entity names"
        }
      ]
    }
  },
  "0.8.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.MultipleEntityFetcher<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<E> org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::wireUpNewEntity(BE, B, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.SingleEntityFetcher<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.returnTypeChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.generics.formalTypeParameterRemoved",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.generics.formalTypeParameterAdded",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Blueprint::<init>\\(.*",
          "justification": "Revapi got confused by the overloaded methods. There is really no breakage here."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Blueprint::<init>\\(.*",
          "justification": "Revapi got confused by the overloaded methods. There is really no breakage here."
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::feeds()",
          "justification": "Feeds are moving to tenants and are only associated with envs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple",
          "justification": "Interface changed because of the move of feeds."
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.ReadAssociate org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::feeds()",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsMultiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsSingle",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Multiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Multiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Single",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessFeeds org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds>::feeds()",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Tenants.Multiple",
          "justification": "Interface changed because of the move of the feeds."           
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Tenants.Single",
          "justification": "Interface changed because of the move of the feeds."           
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.model.CanonicalPath.FeedBuilder org.hawkular.inventory.api.model.CanonicalPath.EnvironmentBuilder::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenant\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenantBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "regex": true,
          "old": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.EnvironmentBuilder<.*>::feed\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "regex": true,
          "old": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.EnvironmentBuilder<.*>::feedBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method EB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::environment\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method EB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::environmentBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.abstractMethodAdded",
          "regex": true,
          "new": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::feedBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.model.RelativePath.FeedBuilder org.hawkular.inventory.api.model.RelativePath.EnvironmentBuilder::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Interface changed because of the move of the feeds."                              
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.Associator<BE, E extends org.hawkular.inventory.api.model.Entity<?, ?>>::<init>(org.hawkular.inventory.base.TraversalContext<BE, E>, org.hawkular.inventory.api.Relationships.WellKnown, java.lang.Class<? extends org.hawkular.inventory.api.model.Entity<?, ?>>)",
          "justification": "Interface changed because of the move of the feeds."                              
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.Read org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::feeds()",
          "justification": "Interface changed because of the move of the feeds."                                       
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.ReadAssociate org.hawkular.inventory.base.BaseEnvironments.Single<BE>::feeds()",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseEnvironments.Single<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Multiple<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Single<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        }
      ]
    }
  },
  "0.9.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessFeeds org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::feeds()",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.method.addedToInterface",
          "regex": true,
          "new": "method R org\\.hawkular\\.inventory\\.api\\.model\\.Element\\w*Visitor<R, P>::visitMetadataPack\\(.*",
          "justification": "Metadata packs, as a new model entity type need to be added to the visitors."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method DataRole org.hawkular.inventory.api.model.DataEntity.Blueprint<DataRole extends org.hawkular.inventory.api.model.DataEntity.Role>::getRole()",
          "justification": "This is a correction of a unnecessarily generic return type."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsMultiple",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.EmptyInventory.TenantsSingle",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "new": "method parameter void org.hawkular.inventory.api.EntityNotFoundException::<init>(===java.lang.Class<?>===, org.hawkular.inventory.api.filters.Filter[][])",
          "justification": "The parameter was relaxed to accept any class, not just subclass of Entity. This comes in handy at times and was seen as low risk change."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method java.lang.Class<?> org.hawkular.inventory.api.EntityNotFoundException::getEntityType()",
          "justification": "EntityNotFoundException now accepts any class instead of just Entity subclasses, so this had to be reflected in this getter, too."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessMetadataPacks org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::metadataPacks()",
          "justification": "Metadata packs are the new feature in 0.8.0"
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Tenants.Multiple",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Tenants.Single",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Multiple<BE>",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Single<BE>",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.removed",
          "old": "class org.hawkular.inventory.api.EmptyInventory.TenantsReadContained",
          "justification": "This class is not used."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.Read<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.Single<BE>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenant\\(java\\.lang\\.String\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenantBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.abstractMethodAdded",
          "regex": true,
          "new": "method MPB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::metadataPackBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method E org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::doCreate(B)",
          "justification": "This is in support of created entity caching to speed up its retrieval right after creation."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "new:":"method parameter void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, ===java.lang.Object>===, java.lang.Long, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.lang.Long, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Update::<init>(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, org.hawkular.inventory.api.model.MetricUnit, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Update::<init>(java.util.Map<java.lang.String, java.lang.Object>, org.hawkular.inventory.api.model.MetricUnit, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType::<init>(java.lang.String, org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType::<init>(org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric.Update::<init>(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric.Update::<init>(java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric::<init>(java.lang.String, org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricType, java.lang.Long, java.util.Map<java.lang.String, java.lang.Object>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        }
      ]
    }
  },
  "0.10.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.ReadContained org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::feedlessMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadContained org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::feedlessResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.ReadWrite org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::feedlessMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::feedlessResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadContained org.hawkular.inventory.api.EmptyInventory.ResourceTypesMultiple::metricTypes()",
          "new": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.EmptyInventory.ResourceTypesMultiple::metricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.EmptyInventory.ResourceTypesMultiple",
          "new": "class org.hawkular.inventory.api.EmptyInventory.ResourceTypesMultiple",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadAssociate org.hawkular.inventory.api.EmptyInventory.ResourcesMultiple::allChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.api.EmptyInventory.ResourcesMultiple::containedChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.EmptyInventory.ResourcesMultiple",
          "new": "class org.hawkular.inventory.api.EmptyInventory.ResourcesMultiple",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadAssociate org.hawkular.inventory.api.EmptyInventory.ResourcesSingle::allChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.api.EmptyInventory.ResourcesSingle::containedChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.hawkular.inventory.api.Metrics.ReadAssociate org.hawkular.inventory.api.EmptyInventory.ResourcesSingle::metrics()",
          "new": "method org.hawkular.inventory.api.Metrics.ReadWrite org.hawkular.inventory.api.EmptyInventory.ResourcesSingle::metrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.EmptyInventory.ResourcesSingle",
          "new": "class org.hawkular.inventory.api.EmptyInventory.ResourcesSingle",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.EmptyInventory.TenantsMultiple::allMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.api.EmptyInventory.TenantsMultiple::allResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadContained org.hawkular.inventory.api.EmptyInventory.TenantsMultiple::feedlessMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.ReadContained org.hawkular.inventory.api.EmptyInventory.TenantsMultiple::feedlessResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.EmptyInventory.TenantsSingle::allMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.api.EmptyInventory.TenantsSingle::allResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadWrite org.hawkular.inventory.api.EmptyInventory.TenantsSingle::feedlessMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.ReadWrite org.hawkular.inventory.api.EmptyInventory.TenantsSingle::feedlessResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method MetricsAccess org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::feedlessMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method ResourcesAccess org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::feedlessResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method MetricsAccess org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::metrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::metricsUnder(org.hawkular.inventory.api.Environments.MetricParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method ResourcesAccess org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::resources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.Environments.BrowserBase<Feeds, ResourcesAccess, MetricsAccess>::resourcesUnder(org.hawkular.inventory.api.Environments.ResourceParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.api.Feeds.BrowserBase<AccessResources, AccessMetrics, MetricTypes, ResourceTypes>::metricsUnder(org.hawkular.inventory.api.Feeds.MetricParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.Feeds.BrowserBase<AccessResources, AccessMetrics, MetricTypes, ResourceTypes>::resourcesUnder(org.hawkular.inventory.api.Feeds.ResourceParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.ResourceTypes.Multiple",
          "new": "class org.hawkular.inventory.api.ResourceTypes.Multiple",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method AllAccess org.hawkular.inventory.api.Resources.BrowserBase<Metrics, Data, ContainedAccess, AllAccess>::allChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AllMetrics org.hawkular.inventory.api.Resources.BrowserBase<ContainedMetrics, AllMetrics, Data, ContainedAccess, AllAccess>::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AllAccess org.hawkular.inventory.api.Resources.BrowserBase<ContainedMetrics, AllMetrics, Data, ContainedAccess, AllAccess>::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method ContainedAccess org.hawkular.inventory.api.Resources.BrowserBase<Metrics, Data, ContainedAccess, AllAccess>::containedChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.Resources.BrowserBase<ContainedMetrics, AllMetrics, Data, ContainedAccess, AllAccess>::recursiveResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method ContainedAccess org.hawkular.inventory.api.Resources.BrowserBase<ContainedMetrics, AllMetrics, Data, ContainedAccess, AllAccess>::resources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Resources.Multiple",
          "new": "class org.hawkular.inventory.api.Resources.Multiple",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.api.Resources.ReadBase<Address>::descend(Address, org.hawkular.inventory.api.model.Path[])",
          "new": "method org.hawkular.inventory.api.Resources.Single org.hawkular.inventory.api.Resources.ReadBase<Address>::descend(Address, org.hawkular.inventory.api.model.Path[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Resources.Single",
          "new": "class org.hawkular.inventory.api.Resources.Single",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::allMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::allResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method AccessMetricTypes org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::feedlessMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method AccessResourceTypes org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::feedlessResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessMetricTypes org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::metricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::metricTypesUnder(org.hawkular.inventory.api.Tenants.MetricTypeParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessResourceTypes org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::resourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::resourceTypesUnder(org.hawkular.inventory.api.Tenants.ResourceTypeParents[])",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method RB org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "new": "method RB org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method RB org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resourceBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "new": "method RB org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resourceBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method RB org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "new": "method RB org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method RB org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resourceBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "new": "method RB org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resourceBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.abstractMethodAdded",
          "new": "method MB org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, This, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::metricBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method This org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, This, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "new": "method This org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, This extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, This, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>>::resource(java.lang.String)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environment(java.lang.String)",
          "new": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environment(java.lang.String)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environmentBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "new": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environmentBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feed(java.lang.String)",
          "new": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feed(java.lang.String)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "new": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.ReadContained org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::feedlessMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadContained org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::feedlessResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.Read org.hawkular.inventory.base.BaseEnvironments.Single<BE>::allMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.Read org.hawkular.inventory.base.BaseEnvironments.Single<BE>::allResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Metrics.ReadWrite org.hawkular.inventory.base.BaseEnvironments.Single<BE>::feedlessMetrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.base.BaseEnvironments.Single<BE>::feedlessResources()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadContained org.hawkular.inventory.base.BaseResourceTypes.Multiple<BE>::metricTypes()",
          "new": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.base.BaseResourceTypes.Multiple<BE>::metricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.base.BaseResourceTypes.Multiple<BE>",
          "new": "class org.hawkular.inventory.base.BaseResourceTypes.Multiple<BE>",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadAssociate org.hawkular.inventory.base.BaseResources.Multiple<BE>::allChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.base.BaseResources.Multiple<BE>::containedChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.base.BaseResources.Multiple<BE>",
          "new": "class org.hawkular.inventory.base.BaseResources.Multiple<BE>",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadAssociate org.hawkular.inventory.base.BaseResources.Single<BE>::allChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.Resources.ReadWrite org.hawkular.inventory.base.BaseResources.Single<BE>::containedChildren()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.hawkular.inventory.api.Metrics.ReadAssociate org.hawkular.inventory.base.BaseResources.Single<BE>::metrics()",
          "new": "method org.hawkular.inventory.api.Metrics.ReadWrite org.hawkular.inventory.base.BaseResources.Single<BE>::metrics()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.base.BaseResources.Single<BE>",
          "new": "class org.hawkular.inventory.base.BaseResources.Single<BE>",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.base.BaseTenants.Multiple<BE>::allMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.base.BaseTenants.Multiple<BE>::allResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadContained org.hawkular.inventory.base.BaseTenants.Multiple<BE>::feedlessMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.ReadContained org.hawkular.inventory.base.BaseTenants.Multiple<BE>::feedlessResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.base.BaseTenants.Single<BE>::allMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.base.BaseTenants.Single<BE>::allResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.MetricTypes.ReadWrite org.hawkular.inventory.base.BaseTenants.Single<BE>::feedlessMetricTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.ResourceTypes.ReadWrite org.hawkular.inventory.base.BaseTenants.Single<BE>::feedlessResourceTypes()",
          "justification": "Renaming to better deal with the explosion of possibilities to query recursive children."
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method TB org.hawkular.inventory.api.model.Path.Builder<Impl extends org.hawkular.inventory.api.model.Path, TB extends org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB, MTB, OTB, SDB, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl, RTB, MTB, RB, MB, OTB, SDB>, RB, MB>, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RLB extends org.hawkular.inventory.api.model.Path.RelationshipBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::tenant(java.lang.String)",
        "new": "method TB org.hawkular.inventory.api.model.Path.Builder<Impl extends org.hawkular.inventory.api.model.Path, TB extends org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB, MTB, OTB, SDB, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl, RTB, MTB, RB, MB, OTB, SDB>, RB, MB>, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RLB extends org.hawkular.inventory.api.model.Path.RelationshipBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::tenant(java.lang.String)",
        "justification": "Metrics can now be owned by resources"
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method TB org.hawkular.inventory.api.model.Path.Builder<Impl extends org.hawkular.inventory.api.model.Path, TB extends org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB, MTB, OTB, SDB, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl, RTB, MTB, RB, MB, OTB, SDB>, RB, MB>, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RLB extends org.hawkular.inventory.api.model.Path.RelationshipBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::tenantBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "new": "method TB org.hawkular.inventory.api.model.Path.Builder<Impl extends org.hawkular.inventory.api.model.Path, TB extends org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB, MTB, OTB, SDB, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl, RTB, MTB, RB, MB, OTB, SDB>, RB, MB>, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, RLB extends org.hawkular.inventory.api.model.Path.RelationshipBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::tenantBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "justification": "Metrics can now be owned by resources"
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environment(java.lang.String)",
        "new": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environment(java.lang.String)",
        "justification": "Metrics can now be owned by resources"
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environmentBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "new": "method EB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::environmentBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "justification": "Metrics can now be owned by resources"
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feed(java.lang.String)",
        "new": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feed(java.lang.String)",
        "justification": "Metrics can now be owned by resources"
        },
        {
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "new": "method FB org.hawkular.inventory.api.model.Path.TenantBuilder<Impl extends org.hawkular.inventory.api.model.Path, EB extends org.hawkular.inventory.api.model.Path.EnvironmentBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, OTB, SDB>, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path>, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl extends org.hawkular.inventory.api.model.Path, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MPB extends org.hawkular.inventory.api.model.Path.MetadataPackBuilder<Impl extends org.hawkular.inventory.api.model.Path>, FB extends org.hawkular.inventory.api.model.Path.FeedBuilder<Impl extends org.hawkular.inventory.api.model.Path, RTB extends org.hawkular.inventory.api.model.Path.ResourceTypeBuilder<Impl, OTB extends org.hawkular.inventory.api.model.Path.OperationTypeBuilder<Impl, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, SDB>, MTB extends org.hawkular.inventory.api.model.Path.MetricTypeBuilder<Impl>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB>, MB, OTB, SDB>, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl extends org.hawkular.inventory.api.model.Path, RB extends org.hawkular.inventory.api.model.Path.ResourceBuilder<Impl, RB, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl>, SDB extends org.hawkular.inventory.api.model.Path.StructuredDataBuilder<Impl, SDB>>, MB, SDB>, MB extends org.hawkular.inventory.api.model.Path.MetricBuilder<Impl extends org.hawkular.inventory.api.model.Path>>::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
        "justification": "Metrics can now be owned by resources"
        }
      ]
    }
  },
  "0.12.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.MetricTypes.Read org.hawkular.inventory.api.MetricTypes.BrowserBase::identical()",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.hawkular.inventory.api.MetricTypes.Single::identityHash() throws org.hawkular.inventory.api.EntityNotFoundException",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },      
        {
          "code": "java.method.addedToInterface",
          "new": "method org.hawkular.inventory.api.ResourceTypes.Read org.hawkular.inventory.api.ResourceTypes.BrowserBase<Resources, MetricTypes, OperationTypes, Data>::identical()",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.hawkular.inventory.api.ResourceTypes.Single::identityHash() throws org.hawkular.inventory.api.EntityNotFoundException",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint)",
          "new": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preDelete(BE)",
          "new": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preDelete(BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update)",
          "new": "method void org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::preUpdate(R, BE, org.hawkular.inventory.api.model.DataEntity.Update)",
          "new": "method void org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::preUpdate(R, BE, org.hawkular.inventory.api.model.DataEntity.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.DataEntity> org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.DataEntity.Blueprint<R>, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.DataEntity> org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.DataEntity.Blueprint<R>, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseData.Single<BE>::cleanup(BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseData.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update)",
          "new": "method void org.hawkular.inventory.base.BaseData.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Environment> org.hawkular.inventory.base.BaseEnvironments.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Environment.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Environment> org.hawkular.inventory.base.BaseEnvironments.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Environment.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Feed> org.hawkular.inventory.base.BaseFeeds.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Feed.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Feed> org.hawkular.inventory.base.BaseFeeds.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Feed.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.MetadataPack> org.hawkular.inventory.base.BaseMetadataPacks.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.MetadataPack.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.MetadataPack> org.hawkular.inventory.base.BaseMetadataPacks.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.MetadataPack.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseMetricTypes.ReadWrite<BE>::cleanup(java.lang.String, BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseMetricTypes.ReadWrite<BE>::preUpdate(java.lang.String, BE, org.hawkular.inventory.api.model.MetricType.Update)",
          "new": "method void org.hawkular.inventory.base.BaseMetricTypes.ReadWrite<BE>::preUpdate(java.lang.String, BE, org.hawkular.inventory.api.model.MetricType.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.MetricType> org.hawkular.inventory.base.BaseMetricTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.MetricType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.MetricType> org.hawkular.inventory.base.BaseMetricTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.MetricType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseMetricTypes.Single<BE>::cleanup(BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseMetricTypes.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.MetricType.Update)",
          "new": "method void org.hawkular.inventory.base.BaseMetricTypes.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.MetricType.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Metric> org.hawkular.inventory.base.BaseMetrics.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Metric.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Metric> org.hawkular.inventory.base.BaseMetrics.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Metric.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint)",
          "new": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preDelete(BE)",
          "new": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preDelete(BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update)",
          "new": "method void org.hawkular.inventory.base.BaseOperationTypes.OperationTypeDataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseOperationTypes.ReadWrite<BE>::cleanup(java.lang.String, BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.OperationType> org.hawkular.inventory.base.BaseOperationTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.OperationType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.OperationType> org.hawkular.inventory.base.BaseOperationTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.OperationType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseOperationTypes.Single<BE>::cleanup(BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.ReadWrite<BE>::cleanup(java.lang.String, BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.ReadWrite<BE>::preUpdate(java.lang.String, BE, org.hawkular.inventory.api.model.ResourceType.Update)",
          "new": "method void org.hawkular.inventory.base.BaseResourceTypes.ReadWrite<BE>::preUpdate(java.lang.String, BE, org.hawkular.inventory.api.model.ResourceType.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.ResourceType> org.hawkular.inventory.base.BaseResourceTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.ResourceType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.ResourceType> org.hawkular.inventory.base.BaseResourceTypes.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.ResourceType.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint)",
          "new": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preCreate(org.hawkular.inventory.api.model.DataEntity.Blueprint, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preDelete(BE)",
          "new": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preDelete(BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update)",
          "new": "method void org.hawkular.inventory.base.BaseResourceTypes.ResourceTypeDataModificationChecks<BE>::preUpdate(BE, org.hawkular.inventory.api.model.DataEntity.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.Single<BE>::cleanup(BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseResourceTypes.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.ResourceType.Update)",
          "new": "method void org.hawkular.inventory.base.BaseResourceTypes.Single<BE>::preUpdate(BE, org.hawkular.inventory.api.model.ResourceType.Update, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Resource> org.hawkular.inventory.base.BaseResources.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Resource.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Resource> org.hawkular.inventory.base.BaseResources.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Resource.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Tenant> org.hawkular.inventory.base.BaseTenants.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Tenant.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<org.hawkular.inventory.api.model.Tenant> org.hawkular.inventory.base.BaseTenants.ReadWrite<BE>::wireUpNewEntity(BE, org.hawkular.inventory.api.model.Tenant.Blueprint, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.Fetcher<BE, E extends org.hawkular.inventory.api.model.AbstractElement<?, U extends org.hawkular.inventory.api.model.AbstractElement.Update>, U extends org.hawkular.inventory.api.model.AbstractElement.Update>::cleanup(BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.Fetcher<BE, E extends org.hawkular.inventory.api.model.AbstractElement<?, U extends org.hawkular.inventory.api.model.AbstractElement.Update>, U extends org.hawkular.inventory.api.model.AbstractElement.Update>::preUpdate(BE, U)",
          "new": "method void org.hawkular.inventory.base.Fetcher<BE, E extends org.hawkular.inventory.api.model.AbstractElement<?, U extends org.hawkular.inventory.api.model.AbstractElement.Update>, U extends org.hawkular.inventory.api.model.AbstractElement.Update>::preUpdate(BE, U, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::cleanup(Id, BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::preUpdate(Id, BE, U)",
          "new": "method void org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::preUpdate(Id, BE, U, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.hawkular.inventory.base.EntityAndPendingNotifications<E> org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::wireUpNewEntity(BE, B, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<E> org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::wireUpNewEntity(BE, B, org.hawkular.inventory.api.model.CanonicalPath, BE, org.hawkular.inventory.base.spi.InventoryBackend.Transaction)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.hawkular.inventory.base.spi.InventoryBackend<E>::extractIdentityHash(E)",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method boolean org.hawkular.inventory.base.spi.InventoryBackend<E>::isBackendInternal(E)",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method void org.hawkular.inventory.base.spi.InventoryBackend<E>::updateIdentityHash(E, java.lang.String)",
          "justification": "New feature - identical metric and resource types detection across feeds"
        },
        {
          "code": "java.method.removed",
          "old": "method void org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::cleanup(R, BE)",
          "justification": "More comprehensive way of adding custom preCreate, postCreate, preUpdate, postUpdate, preDelete and postDelete logic in base.Fetcher and base.Mutator subclasses."
        }
     ]
    }
  },
  "0.13.0.Final": {
    "revapi": {
      "ignore": [
        {
          "regex": true,
          "code": "(java.method.parameterTypeChanged)|(java.method.returnTypeChanged)|(java.method.returnTypeTypeParametersChanged)",
          "old": ".*org\\.hawkular\\.inventory\\.api\\.model.*",
          "new": ".*org\\.hawkular\\.inventory\\.paths.*",
          "justification": "Path classes moved to a new location: org.hawkular.inventory.paths in a new shared module."
        },
        {
          "regex": true,
          "code": "(java.class.removed)",
          "old": "class org\\.hawkular\\.inventory\\.api\\.model\\.[a-zA-Z]*Path.*",
          "justification": "Path classes moved to a new location: org.hawkular.inventory.paths in a new shared module."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "regex": true,
          "old": "class org\\.hawkular\\.inventory\\.(base|api)\\.[a-zA-Z]+\\.Read(Associate)?(<[A-Z]+>)?",
          "justification": "This might match more than we'd like but that's actually a deficiency of Revapi to which we're not able to tell WHICH interface is no longer implemented."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "regex": true,
          "old": "class org\\.hawkular\\.inventory\\.api\\.EmptyInventory\\.[a-zA-Z]+Read(Associate)?(<[A-Z]+>)?",
          "justification": "This might match more than we'd like but that's actually a deficiency of Revapi to which we're not able to tell WHICH interface is no longer implemented."
        },
        {
          "code": "java.field.typeChanged",
          "regex": true,
          "old": "field org\\.hawkular\\.inventory\\.api\\.model\\.Entity\\.Blueprint\\.Builder.*\\.(incoming|outgoing)",
          "justification": "These two fields had canonical path in their types' type parameters."
        },
        {
          "code": "java.class.removed",
          "old": "class org.hawkular.inventory.api.model.ElementTypeVisitor<R, P>",
          "justification": "This got moved to org.hawkular.inventory.paths"
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<?> org.hawkular.inventory.api.EntityNotFoundException::getEntityType()",
          "justification": "Replaced by getEntityTypeSimpleName()"
        }
      ]
    }
  }
}
