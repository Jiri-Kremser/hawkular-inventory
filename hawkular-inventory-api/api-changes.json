{
  "0.5.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.class.visibilityReduced",
          "regex": true,
          "old": "class org\\.hawkular\\.inventory\\.api\\.model\\.Path\\..*",
          "justification": "A number of inner classes of the Path class have been 'hidden'. These classes were not meant for public consumption and so this change should not cause much trouble to the users."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.api.model.Path.Decoder::<init>(org.hawkular.inventory.api.model.Path.EnhancedTypeProvider)",
          "justification": "This is never used in a public capacity and also doesn't have a reason to be used publicly."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method org.hawkular.inventory.api.model.Path.Segment org.hawkular.inventory.api.model.Path.Decoder::decodeNext(org.hawkular.inventory.api.model.Path.ParsingProgress)",
          "justification": "This is never used in a public capacity and also doesn't have a reason to be used publicly."
        },
        {
          "code": "java.class.nowFinal",
          "old": "class org.hawkular.inventory.api.model.Path.Decoder",
          "justification": "This class should not be subclassable. It's also been changed to private so clients will not even see this class anymore."
        },
        {
          "code": "java.class.nowFinal",
          "old": "class org.hawkular.inventory.api.model.Path.Encoder",
          "justification": "This class should not be subclassable to ensure uniform encoding of canonical and relative paths."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method org.hawkular.inventory.api.model.Path org.hawkular.inventory.api.model.Path::fromString(java.lang.String, boolean, org.hawkular.inventory.api.model.Path.ExtenderConstructor, org.hawkular.inventory.api.model.Path.EnhancedTypeProvider)",
          "justification": "This was reduced to package visibility, because all Path subclasses should always be present in the same package in the API."
        },
        {
          "code": "java.class.removed",
          "old": "class org.hawkular.inventory.api.model.Version",
          "justification": "This class hasn't been in use for a couple of releases."
        },
        {
          "code": "java.class.visibilityReduced",
          "old": "class org.hawkular.inventory.base.BaseInventory.Initialized<E>",
          "justification": "This is used internally and should not have leaked into the API."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.base.BaseInventory.Initialized<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext, org.hawkular.inventory.api.Configuration)",
          "justification": "This is used internally and should have not leaked into the API."
        },
        {
          "code": "java.method.visibilityReduced",
          "old": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext)",
          "justification": "This is used internally and should have not leaked into the API."
        },
        {
          "code": "java.class.externalClassNoLongerExposedInAPI",
          "old": "class org.hawkular.inventory.base.ObservableContext",
          "justification": "This is actually a good thing (tm) :)"
        },
        {
          "code" : "java.method.addedToInterface",
          "new" : "method org.hawkular.inventory.api.Configuration org.hawkular.inventory.api.Inventory::getConfiguration()",
          "justification" : "Exposing the configuration."
        },
        {
          "code" : "java.method.numberOfParametersChanged",
          "old": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext)",
          "new": "method void org.hawkular.inventory.base.BaseInventory<E>::<init>(org.hawkular.inventory.base.spi.InventoryBackend<E>, org.hawkular.inventory.base.ObservableContext, org.hawkular.inventory.api.Configuration)",
          "justification" : "Passing the configuration as a parameter in constructor."
        }
      ]
    }
  },
  "0.7.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.generics.formalTypeParameterChanged",
          "new": "class org.hawkular.inventory.api.model.Entity<B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\.Entity<[^>]+>::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\.(DataEntity|Environment|Feed|Metric|MetricType|OperationType|Resource|ResourceType|Tenant)::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter void org\\.hawkular\\.inventory\\.api\\.model\\.(DataEntity|Environment|Feed|Metric|MetricType|OperationType|Resource|ResourceType|Tenant)::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method void org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Update::<init>\\(.*",
          "justification": "Support for entity names."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter void org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Update::<init>\\(.*",
          "justification": "Support for entity names"
        }
      ]
    }
  },
  "0.8.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.MultipleEntityFetcher<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method org.hawkular.inventory.base.EntityAndPendingNotifications<E> org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::wireUpNewEntity(BE, B, org.hawkular.inventory.api.model.CanonicalPath, BE)",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.SingleEntityFetcher<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, U extends org.hawkular.inventory.api.model.Entity.Update>",
          "justification": "Support for entity names required changing the type param of Entity to change."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method parameter .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.returnTypeChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.generics.formalTypeParameterRemoved",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.generics.formalTypeParameterAdded",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.Inventory::inspect\\(.*",
          "justification": "Revapi got confused by the large number of overloads. There is really no breakage here."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Blueprint::<init>\\(.*",
          "justification": "Revapi got confused by the overloaded methods. There is really no breakage here."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "regex": true,
          "old": "method .* org\\.hawkular\\.inventory\\.api\\.model\\..*\\.Blueprint::<init>\\(.*",
          "justification": "Revapi got confused by the overloaded methods. There is really no breakage here."
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.Read org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple::feeds()",
          "justification": "Feeds are moving to tenants and are only associated with envs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.EnvironmentsMultiple",
          "justification": "Interface changed because of the move of feeds."
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.ReadAssociate org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle::feeds()",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.EnvironmentsSingle",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsMultiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsSingle",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Multiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Multiple",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Environments.Single",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessFeeds org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds>::feeds()",
          "justification": "Interface changed because of the move of the feeds."    
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Tenants.Multiple",
          "justification": "Interface changed because of the move of the feeds."           
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.Tenants.Single",
          "justification": "Interface changed because of the move of the feeds."           
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.model.CanonicalPath.FeedBuilder org.hawkular.inventory.api.model.CanonicalPath.EnvironmentBuilder::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenant\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenantBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "regex": true,
          "old": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.EnvironmentBuilder<.*>::feed\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "regex": true,
          "old": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.EnvironmentBuilder<.*>::feedBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method EB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::environment\\(java\\.lang\\.String\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method EB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::environmentBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.abstractMethodAdded",
          "regex": true,
          "new": "method FB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::feedBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "Interface changed because of the move of the feeds."                    
        },
        {
          "code": "java.method.removed",
          "old": "method org.hawkular.inventory.api.model.RelativePath.FeedBuilder org.hawkular.inventory.api.model.RelativePath.EnvironmentBuilder::feedBuilder(java.util.List<org.hawkular.inventory.api.model.Path.Segment>)",
          "justification": "Interface changed because of the move of the feeds."                              
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.Associator<BE, E extends org.hawkular.inventory.api.model.Entity<?, ?>>::<init>(org.hawkular.inventory.base.TraversalContext<BE, E>, org.hawkular.inventory.api.Relationships.WellKnown, java.lang.Class<? extends org.hawkular.inventory.api.model.Entity<?, ?>>)",
          "justification": "Interface changed because of the move of the feeds."                              
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.Read org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>::feeds()",
          "justification": "Interface changed because of the move of the feeds."                                       
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseEnvironments.Multiple<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method org.hawkular.inventory.api.Feeds.ReadAssociate org.hawkular.inventory.base.BaseEnvironments.Single<BE>::feeds()",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseEnvironments.Single<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Multiple<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Single<BE>",
          "justification": "Interface changed because of the move of the feeds."                                        
        }
      ]
    }
  },
  "0.9.0.Final": {
    "revapi": {
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessFeeds org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::feeds()",
          "justification": "Interface changed because of the move of the feeds."
        },
        {
          "code": "java.method.addedToInterface",
          "regex": true,
          "new": "method R org\\.hawkular\\.inventory\\.api\\.model\\.Element\\w*Visitor<R, P>::visitMetadataPack\\(.*",
          "justification": "Metadata packs, as a new model entity type need to be added to the visitors."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method DataRole org.hawkular.inventory.api.model.DataEntity.Blueprint<DataRole extends org.hawkular.inventory.api.model.DataEntity.Role>::getRole()",
          "justification": "This is a correction of a unnecessarily generic return type."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.api.EmptyInventory.TenantsMultiple",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.EmptyInventory.TenantsSingle",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "new": "method parameter void org.hawkular.inventory.api.EntityNotFoundException::<init>(===java.lang.Class<?>===, org.hawkular.inventory.api.filters.Filter[][])",
          "justification": "The parameter was relaxed to accept any class, not just subclass of Entity. This comes in handy at times and was seen as low risk change."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "new": "method java.lang.Class<?> org.hawkular.inventory.api.EntityNotFoundException::getEntityType()",
          "justification": "EntityNotFoundException now accepts any class instead of just Entity subclasses, so this had to be reflected in this getter, too."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method AccessMetadataPacks org.hawkular.inventory.api.Tenants.BrowserBase<AccessResourceTypes, AccessMetricTypes, AccessEnvs, AccessFeeds, AccessMetadataPacks>::metadataPacks()",
          "justification": "Metadata packs are the new feature in 0.8.0"
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Tenants.Multiple",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.hawkular.inventory.api.Tenants.Single",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Multiple<BE>",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "new": "class org.hawkular.inventory.base.BaseTenants.Single<BE>",
          "justification": "The type parameters of Tenants.BrowserBase have changed due to addition of metadata packs."
        },
        {
          "code": "java.class.removed",
          "old": "class org.hawkular.inventory.api.EmptyInventory.TenantsReadContained",
          "justification": "This class is not used."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.Read<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.ReadWrite<BE, R extends org.hawkular.inventory.api.model.DataEntity.Role>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.base.BaseData.Single<BE>::<init>(org.hawkular.inventory.base.TraversalContext<BE, org.hawkular.inventory.api.model.DataEntity>, org.hawkular.inventory.base.BaseData.DataModificationChecks<BE>)",
          "justification": "This is required for properly checking for disallowed modifications in presence of metadata packs."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenant\\(java\\.lang\\.String\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "regex": true,
          "new": "method TB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Builder<.*>::tenantBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.abstractMethodAdded",
          "regex": true,
          "new": "method MPB org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.TenantBuilder<.*>::metadataPackBuilder\\(java\\.util\\.List<org\\.hawkular\\.inventory\\.api\\.model\\.Path\\.Segment>\\)",
          "justification": "The path builders now support metadata packs"
        },
        {
          "code": "java.method.returnTypeChanged",
          "new": "method E org.hawkular.inventory.base.Mutator<BE, E extends org.hawkular.inventory.api.model.Entity<?, U extends org.hawkular.inventory.api.model.Entity.Update>, B extends org.hawkular.inventory.api.model.Blueprint, U extends org.hawkular.inventory.api.model.Entity.Update, Id>::doCreate(B)",
          "justification": "This is in support of created entity caching to speed up its retrieval right after creation."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "new:":"method parameter void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, ===java.lang.Object>===, java.lang.Long, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Blueprint::<init>(java.lang.String, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.lang.Long, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>, java.util.Map<java.lang.String, java.util.Set<org.hawkular.inventory.api.model.CanonicalPath>>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Update::<init>(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, org.hawkular.inventory.api.model.MetricUnit, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType.Update::<init>(java.util.Map<java.lang.String, java.lang.Object>, org.hawkular.inventory.api.model.MetricUnit, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType::<init>(java.lang.String, org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.MetricType::<init>(org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricUnit, org.hawkular.inventory.api.model.MetricDataType, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric.Update::<init>(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric.Update::<init>(java.util.Map<java.lang.String, java.lang.Object>, java.lang.Long)",
          "justification": "Added field interval which represents period at which metrics are collected."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void org.hawkular.inventory.api.model.Metric::<init>(java.lang.String, org.hawkular.inventory.api.model.CanonicalPath, org.hawkular.inventory.api.model.MetricType, java.lang.Long, java.util.Map<java.lang.String, java.lang.Object>)",
          "justification": "Added field interval which represents period at which metrics are collected."
        }
      ]
    }
  }
}
